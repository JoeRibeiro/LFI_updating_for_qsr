#RAISE_Q<-F
}
#### indicators survey loop ####
#"BBICnSpaOT4" "BBICPorOT4"  "BBICsSpaOT1" "BBICsSpaOT4" "CSBBFraOT4"
#"CSEngBT3"    "CSIreOT4"    "CSNIrOT1"  "CSNIrOT4"    "CSScoOT1"    "CSScoOT4"
#"GNSEngBT3"   "GNSFraOT4"  "GNSGerBT3"   "GNSIntOT1"   "GNSIntOT3"  "GNSNetBT3"
#"WAScoOT3"    "WASpaOT3"  "CSFraOT4"
setwd(MAINDIR)
for(survey in  SURVEY){ # survey <- "GNSGerBT3" #SURVEY[1]#"WAScoOT3" # #"CSFraOT4"#WASpaOT3#[4]# BBICsSpaOT1 and BBICsSpaOT4 missing datayear causes warnings in LFI fn so have suppressed these
print(survey)
#add a directory for files out
if(!file.exists(paste(OUTPATHstem,survey,sep=''))) dir.create(file.path(OUTPATHstem, survey))
OUTPATH <- paste(OUTPATHstem,survey,"/",sep='')
LFI_THRESHOLD <- LFIthresholds[,survey]
print(LFIthresholds[,survey])
SPECIES <- c("DEM","PEL"); #
if(survey %in% c("GNSGerBT3","GNSNetBT3","GNSEngBT3","GNSEngBT4","CSEngBT3","CSEngBT4")){ SPECIES <- "DEM"  } else {  SPECIES <- c("DEM","PEL")} #
if(survey %in% c("GNSGerBT3","GNSNetBT3","GNSIntOT1","GNSIntOT3")){
SAMP_STRAT <- T # average hauls by rect in north sea #if set to FALSE need to update Attibutes table as area only given by rect
BYSUBDIV <-   T # average indicator by LFI-subdivision
} else { #CS, BB and WA
SAMP_STRAT <- F # do not average hauls by rect
BYSUBDIV <-   T # average indicator by survey strata from shapefiles
}
#exceptions
if(survey=="GNSFraOT4"){
SAMP_STRAT <- T # average hauls over surveyed minigrid0.25deg  #if set to FALSE need to update Attibutes table as area only given by minigrid
BYSUBDIV <-   F # no higher survey strata - could use depth strata from GNSEngBT3 - not implemented
}
#Trophic Level FW4 check
if(MEANTLs==T & !(substr(survey,1,2) %in% c("CS","BB", "GN")) ) { MEANTLs<-F; print("no data for TL for WA surveys, deleting MTL selection") }
##load data
#sampling data
if(survey=="CSFraOT4"){
samp_file <- paste("Sampling_Info\\SamplingInfo_CSBBFraOT4_SSASMP.csv",sep='')
} else {
samp_file <- paste("Sampling_Info\\SamplingInfo_",survey,"_SSASMP.csv",sep='')
}
samp <- read.csv(samp_file)
# biological data
if(survey=="CSFraOT4"){
bio_file <- paste("Biological_Info\\BiologicalInfo_CSBBFraOT4_SSASMP_kNN.csv",sep='')
} else {
bio_file <- paste("Biological_Info\\BiologicalInfo_",survey,"_SSASMP_kNN.csv",sep='')
}
bio <- read.csv(bio_file)
#names(bio)[which(names(bio) =="IndivFishWght_g")] <-"IndivFishWgt_g" #typo correct
#names(bio)[which(names(bio) =="DensAbund_N_sqkm")] <-"DensAbund_N_Sqkm" #typo correct
# #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#quick eyeball of sampling data
# # quick check
# #par(mfrow=c(1,1))
# x11(); par(mfrow=c(4,4))
# plot(samp$ShootLong_degdec, samp$ShootLat_degdec); map(add=T)
# abline(v=c(4,8));  abline(h=55.5)
# with(samp, hist(MonthShot))
# with(samp, hist(HaulDur_min))
# with(samp, hist(Depth_m))
# with(samp, hist(WingSpread_m))
# with(samp, hist(DoorSpread_m))
# with(samp, hist(NetOpen_m))
# with(samp, hist(WingSwpArea_sqkm) )
# with(samp, hist(WingSwpVol_CorF ))
# with(samp, hist(DoorSwptArea_CorF) )
# with(samp, hist(DoorSwptVol_CorF))
# with(samp, hist(Distance_km))
# samp[(samp$Distance_km)==max(samp$Distance_km),]
# #samp[(samp$Distance_km)>5,] # big value
# ##x11(); par(mfrow=c(2,3))
# with(bio, hist(FishLength_cm))
# with(bio, hist(IndivFishWgt_g))
# #bio[!is.na(bio$IndivFishWgt_g) & (bio$IndivFishWgt_g)==max(bio$IndivFishWgt_g,na.rm=T),]
# with(bio, hist(DensAbund_N_Sqkm))
# #bio[!is.na(bio$DensAbund_N_Sqkm) & (bio$DensAbund_N_Sqkm)==max(bio$DensAbund_N_Sqkm,na.rm=T),]
# # samp[samp$HaulID == bio[(bio$DensAbund_N_Sqkm)==max(bio$DensAbund_N_Sqkm),'HaulID'], ] # sometimes get multiple matches e.g sprat on north sea IBTS Q1
# with(bio, hist(DensBiom_kg_Sqkm))
# #bio[!is.na(bio$DensBiom_kg_Sqkm) & (bio$DensBiom_kg_Sqkm)==max(bio$DensBiom_kg_Sqkm,na.rm=T),]
# #with(bio, hist(Number))
# #eyeball end
# savePlot(filename= paste(OUTPATH,survey,"_",format(Sys.time(), "%d%b%Y"),"eyeball",".bmp",sep=''),type="bmp")
# dev.off()
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#now merge datasets on haul and species for indicator script
#bio <- read.csv(bio_file) #reduce memory usage
bio <- bio[,c("HaulID","SpeciesSciName","FishLength_cm","DensBiom_kg_Sqkm")]
#add efficiency of E=GOV gear
#Gear efficiency is the probability that fish in the path of a trawl will be caught and retained
if(RAISE_Q & CATCHABILITY_COR_WALKER){
bio <- merge(bio, Qs[Qs$Gear=="GOV",],  by.x=c("SpeciesSciName","FishLength_cm"),
by.y=c("SciName", "Length"), all.x=T, all.y=F)
bio$mult <- 1/bio$Efficiency
# zeros for
u(bio[is.infinite(bio$mult),'SpeciesSciName'])
#GNSEngBT3: Agonus cataphractus    Arnoglossus laterna    Callionymus maculatus  .
#           Microchirus variegatus Syngnathus rostellatus
#if efficiency is zero use absolute estimate last resort
bio[is.infinite(bio$mult),'mult'] <- 1/bio[is.infinite(bio$mult),'Absolute']
#if no absolute estimate use group
u(bio[is.na(bio$mult),'SpeciesSciName'])# check species names not missing due to spelling mistakes
bio[is.na(bio$mult),'mult'] <- 1/bio[is.na(bio$mult),'Efficiency']
}
samp <-samp[,c("HaulID","YearShot","ShootLat_degdec","ShootLong_degdec","ICESStSq","SurvStratum")]
dhspp <- merge(bio,samp,by="HaulID")
rm(samp,bio)
if(SPECIES_IN_MOD_ONLY) dhspp <- dhspp[dhspp$SpeciesSciName %in% SPECIES_SUBSET,] #use only those from thorpe model
if(RAISE_Q & CATCHABILITY_COR_MOD){
dhspp$from <- dhspp$to <- NA
#from # an(Q[-1,1])
#to   # an(Q[-1,2])
for(i in 2:nrow(Q)) dhspp[dhspp$FishLength_cm >= an(Q[i,1]) & dhspp$FishLength_cm < an(Q[i,2]),"from"] <- an(Q[i,1])
for(i in 2:nrow(Q)) dhspp[dhspp$FishLength_cm >= an(Q[i,1]) & dhspp$FishLength_cm < an(Q[i,2]),"to"]   <- an(Q[i,2])
if(nrow(dhspp[is.na(dhspp$from),])>0) print("some species len cat without scaling factors")
#species names in colnames have dot in, sciname in first row does not so matches    SpeciesSciName
Qss <-NULL
for(i in 1:length(SPECIES_SUBSET) ){
Qs<-data.frame(matrix(NA,length(Q[-1,1]),3))
names(Qs)<-c("SpeciesSciName","from","Efficiency")
Qs[,"from"] <- an(Q[-1,1]) #from
Qs[,"SpeciesSciName"] <- SPECIES_SUBSET[i]
Qs["Efficiency"] <- Q[-1,Q[1,]==SPECIES_SUBSET[i]]
Qss <- rbind(Qss,Qs)
}
Qss$Efficiency <- an(Qss$Efficiency)
Qss$mult <- 1/(Qss$Efficiency) # this is a scaled multiplier from surveyed tonnes to model currency of grams so community metrics match those from model output
Qss[is.infinite(Qss$mult),"mult"]<-0
#Qss$Efficiency <- Qss$Efficiency * (10^8) # to avoid numerical issues #biomass units now in 100g
dhspp <- merge(dhspp, Qss,  by.x=c("SpeciesSciName","from"),
by.y=c("SpeciesSciName", "from"), all.x=T, all.y=F)
dhspp$DensBiom_kg_Sqkm <- dhspp$DensBiom_kg_Sqkm  * dhspp$mult/1000 #thousand since multipler based on tonnes output from script
}
#(dhspp[ac(dhspp$SpeciesSciName) %in% ac(SPECIES_SUBSET),"SpeciesSciName"])
#simplify names
names(dhspp)[which(names(dhspp) =="YearShot")] <-"Year"
#for tyl
dhspp$LogLngtClass <- log(dhspp$FishLength_cm)
dhspp$LogLngtBio <- dhspp$LogLngtClass * dhspp$DensBiom_kg_Sqkm
#### link subdivisional shapefiles to data ####
# and read attributes of shapefiles create table ATTRIB with names SurvStratum & KM2_LAM
source(paste(PACKAGEDIRECTORY,"Scripts_and_required_files/Lynam_OSPARsubdiv_rectmod.r",sep=""))
#MaxLength and demersal or pelagic
#MaxLength observed for MML
if(OVERWITE_SUBDIV) dhspp<- dhspp[,-which(names(dhspp) %in% "SurvStratum" )]
dhspp <- merge(dhspp,trait_MAXL[,c("SpeciesSciName","maximum.length", "DEMPEL")],by="SpeciesSciName",all.x=T)
names(dhspp)[which( names(dhspp)=="maximum.length")] <- "MaxL"
#DEM are ecotypes Demersal + Bathydemersal + Bathypelagic  (except Micromesistius poutassou Blue whiting) + Benthopelagic (except Clupea harengus herring)
#PEL are Pelagic  #sprat, mac, hmx, her, whb etc
dhspp$DEMPEL <-as.character(dhspp$DEMPEL)
dhspp$DEMPEL[dhspp$DEMPEL=="Demersal"] <- "DEM"
dhspp$DEMPEL[dhspp$DEMPEL=="Pelagic"] <- "PEL"
dhspp$DEMPEL <-as.character(dhspp$DEMPEL)
if(OVERWITE_SUBDIV) dhspp$SurvStratum<-dhspp$sampstrat
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#### Calc ALL indicators ####
if(EHDS_PP) SAMP_STRAT<-F
if(SAMP_STRAT){ # dependent on survey see Lynam_OSPARsubdiv.r above# if(survey=="GNSFraOT4"){ dhspp$sampstrat <- dhspp$SurvStratum # minigrid of sqs
dhspp <- dhspp[!is.na(dhspp$SurvStratum),] #rm outside area
} else { dhspp$sampstrat <- NA}
if(BYSUBDIV){   dhspp$subdiv <- dhspp$SurvStratum; #dhspp$subdiv <-substr(dhspp$subdiv,1,2); # dependent on survey
dhspp$STRAT_DIV <- paste(dhspp$sampstrat, dhspp$subdiv,sep="_")
} else { dhspp$subdiv <- dhspp$STRAT_DIV <- NA} #could be hauls(sampstrat) within subdiv or only 'NA_subdiv'
STRATA <- T #for output
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
YRS <- sort(unique(dhspp$Year))
FILENAM<-paste(OUTPATH,survey,"_",format(Sys.time(), "%d%b%Y"),sep="")
FILENAM2<-paste(OUTPATHstem,survey,"_",format(Sys.time(), "%d%b%Y"),sep="")
#all indicators calc here and biomass by rectangle
print("Calc Biomass and Indicators")
IND_OUT <- INDfn( DATA=dhspp, WRITE=T, SPECIES=SPECIES, LFI_THRESHOLD=LFI_THRESHOLD,
SAMP_STRAT=SAMP_STRAT, BYSUBDIV=BYSUBDIV, FILENAM=FILENAM,FILENAM2=FILENAM2,
LFI=LFI, MEANTL=MEANTLs, MaxL=MaxL, MeanL=MeanL, TyL_GeoM=TyL_GeoM)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
} # next survey
print("script 1 complete")
#  Before using, please install used packages
# with option of bootstapping by haul and subdiv and trendline fitting
#
# Author: C Lynam, Cefas
# Contact: chris.lynam@cefas.co.uk
# Version: 2.3
# Date: 10 Feb 2017
# edits: now choose surveys to loop through upfront, set paths used throughout upfront, uses new dataproduct structure
# reads shapefiles for subdivisions and includes spatial area of strata in calcs
# if both SAMP_STRAT and BYSUBDIV are true now averages catch by SAMP_STRAT then multiples by AREA; then sums within SUBDIV and raises to whole SUBDIV AREA if not fully sampled, so combination of SUBDIV not subject to change in relative contribution of SUBDIV due to sampling
# link to loess ploting code for subdivs complete
# to do -
# link to shapefile survey maps colours by status
# alter bootstrap code so works with survey strata not just rectangles
#  Error in MINUS$centlon : $ operator is invalid for atomic vectors
#TODAYSDATE = ""
LFIthresholds <- data.frame(BBICnSpaOT4=25,WASpaOT3=40,BBICsSpaOT4=45,BBICPorOT4=40,CSBBFraOT4=35,CSEngBT3=35,CSIreOT4=30,CSNIrOT1=45,CSNIrOT4=40,CSScoOT1=35,CSScoOT4=40,GNSEngBT3=50,GNSFraOT4=50,GNSGerBT3=30,GNSIntOT1=50,GNSIntOT3=50,GNSNetBT3=30,WAScoOT3=50,CSFraOT4=40)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Automatically (or manually, if desired...) set working directory
#PACKAGEDIRECTORY = "Y:/MA016FI_Cefmat/Working_Area/D4/TyL/" # If manually changing directory here, then comment out the second reference to PACKAGEDIRECTORY
library(rstudioapi)
this_script_dir = rstudioapi::getActiveDocumentContext()$path # DO NOT COPY AND PASTE THIS LINE INTO THE CONSOLE!! THIS LINE ONLY WORKS WHEN EXECUTED FROM THE SCRIPT
this_script_dir2 = strsplit(this_script_dir,  "Scripts_and_required_files"); this_script_dir2 = this_script_dir2[[1]]
PACKAGEDIRECTORY = this_script_dir2[1]
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#location of the data and subscripts
MAINDIR<- paste(PACKAGEDIRECTORY,"Scripts_and_required_files/Data_Product_V3/", sep = "")
#location of the subscripts
SUBSCRIPTS_TRAITS<- paste(PACKAGEDIRECTORY,"Scripts_and_required_files/", sep = "")
#location of the shapefiles and where is the 'attributes' folder
SHAPEPATH<- paste(PACKAGEDIRECTORY,"Scripts_and_required_files/Strata/", sep = "")
#where save output?
OUTPATHstem<- paste(PACKAGEDIRECTORY,"Outputs/", sep = "")
## choices for analyses upfront
setwd(MAINDIR)
SURVEYS<-list.files("Sampling_Info\\")
SURVEYS<-strsplit(SURVEYS,split="_")
SURVEY<-NULL
for(i in 1:length(SURVEYS)) SURVEY[i] <- SURVEYS[[i]][2]
SURVEY<-SURVEY[SURVEY!="AllSurveys" & !is.na(SURVEY)]; rm(SURVEYS)
SURVEY[length(SURVEY)+1]<-"CSFraOT4"
#SURVEY<- c("GNSEngBT3", "GNSFraOT4",  "GNSGerBT3",   "GNSIntOT1",   "GNSIntOT3",  "GNSNetBT3")
EHDS_PP<-F;
#SURVEY<- c("GNSIntOT1")
#SURVEY<- c("GNSIntOT3","GNSGerBT3","GNSIntOT1","GNSNetBT3")
#SURVEY<-SURVEY[!SURVEY%in%c("GNSIntOT3","GNSGerBT3","GNSIntOT1","GNSNetBT3")]
#full list
# "BBICnSpaOT4" "BBICPorOT4"  "BBICsSpaOT1" "BBICsSpaOT4" "CSBBFraOT4"  "CSEngBT3"    "CSIreOT4"    "CSNIrOT1"    "CSNIrOT4"    "CSScoOT1"
# "CSScoOT4"    "GNSEngBT3"   "GNSFraOT4"   "GNSGerBT3"   "GNSIntOT1"   "GNSIntOT3"   "GNSNetBT3"   "WAScoOT3"    "WASpaOT3"    "CSFraOT4"
#do you want to write outputs along the way and save workspace
WRITE <- T #save csvs as we go?
WRITE_LDs <- T #write Length distributions by species/year/subdiv?
BOOTSTRAP <- F # invoke code? if F next 3 lines redundant
NBOOT<-200
WRITE_BOOT <- F # every bootstrap dataset and indicator output
SAVE <- T # save workspace (after bootstrap)
#which indicators?
TyL_GeoM <- F # OSPAR FW3
MaxL <- F # OSPAR FC3
MEANTLs <- F #similar to OSPAR FW4 # not will not be calc'd for WAsurveys as no data file for TL
MeanL <- F #not OSPAR but simple
LFI <- T # similar to OSPAR FC2
OVERWITE_SUBDIV<-T ##not run##01Feb2017# if true ignore subdivisions [as done for LFI] and use sampstrat as subdivisions instead
# catchability for general species groups
SPECIES_IN_MOD_ONLY <-F
CATCHABILITY_COR_WALKER<-F
CATCHABILITY_COR_MOD<-F
SPECIES_IN_MOD_ONLY<-F
survey <-SURVEY
RAISE_Q<-F #can override below if Either CATCHABILITY_COR_ TRUE
#change lfi thr to 50
##NOTE additional choices below for plotting
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#useful packages
#install.packages("spatstat")
#install.packages("rgeos")
library(Hmisc)# for errbars
library(mgcv) # to investigate indicator trends with gam
library(maps) # for eyeball of data
library(lattice)
require(rgdal) # to read shapefiles for subdivisions
#to add shapefile info to data in Lynam_OSPARsubdiv_rectmod.r
library(sp)
library(spatstat)
library(rgeos)
library(maptools)
library(stringr)
#increase memory to max
memory.limit(size =4095)
memory.limit(size = NA)
#some shorthand
an <- as.numeric
af <- as.factor
ac <- as.character
h <- head
u <- unique
count<- function(DATA){length(unique(DATA))}
neg<-function(x) -x
#where are the subscripts and traits?
setwd(SUBSCRIPTS_TRAITS)
#additional functions
source("required.funcs.r")              # using tapply.ID
source("Lynam_INDfn_Dec2016 - OSPARrectmod.r") # Nov2016 update to output total of meanCPUE by strata and total survey area
if(BOOTSTRAP) source("Lynam_IND_BOOTfn_July_2016 - OSPAR.r")  # bootstrap the hauls by STSQ and subdiv
source("Lynam_INDPLOTFN.r")             # plot options
#subscripts for indicators
if(LFI) source("Lynam_INDfn_Dec2016_LFI_rectmod_May2018.R")   # Large Fish Indicator # Nov2016 no longer fall over if no fish above LFI_THRESHOLD
if(TyL_GeoM) source("Lynam_INDfn_Dec2016_TyL_GeoM.r")#Geometric mean length (Typical Length cm)
if(MeanL) source("Lynam_INDfn_Dec2016_MeanL.r") # Mean Length cm
if(MaxL) source("Lynam_INDfn_Dec2016_MaxL.r")  # MaxL
if(MEANTLs) source("Lynam_INDfn_Dec2016_MeanTL.r")# TL output by rectangle and year
# info on trophic level, demersal/pelagic,  maxLength, etc
#trait_file <- paste("fishspecieslifehistorytraits_v3.csv",sep='')
# should have some similar file in final dataproduct!
# dataset with traits by species for indicator script
#trait <- read.csv(trait_file)
#trait$SpeciesSciName <- paste(trait$Genus,trait$Species,sep='')
#max length observed in ospar dataproduct by species
#Hyperoplus immaculatus 'Greater sand-eel' were missing -> recorded in GNS IBTS Q1 but without length  treat as Ammodytidae 'sandeel'
MAXL_file <- paste("traits_by_species_Dec2016.csv",sep='')
trait_MAXL <- read.csv(MAXL_file)
#trophic level info
#cnrs mtl fw4
TLceltic <- read.csv("TL_complete14102016-1.csv")
names(TLceltic)[1] <- "SpeciesSciName"
TLceltic <- TLceltic[,c("SpeciesSciName","TL")]
# west of scotland
TLwest <- NULL
# north sea
TLnorth <- read.csv("refspp_LWmerged_edit06Nov2015.csv")
names(TLnorth)[2] <- "SpeciesSciName"
ECOPATH_TL <- F; if(ECOPATH_TL)  TLnorth$TL <- TLnorth$TL_Ecopath #for comparison with ewe
TLnorth <- TLnorth[,c("SpeciesSciName","TL")]
# catchability for general species groups
if(CATCHABILITY_COR_WALKER){
SciName2GroupEff <- read.csv("SciName2GroupEff.csv")
# add catchability by length group
Q <- read.csv(paste(PACKAGEDIRECTORY,"Scripts_and_required_files/Walker_GearEfficiency_ICESJMarSci17_Supp/EfficiencyTab.csv",sep=""))
Q$Code <- ac(Q$Code)
Qsp <- read.csv(paste(PACKAGEDIRECTORY,"Scripts_and_required_files/Walker_GearEfficiency_ICESJMarSci17_Supp//specieslist.csv",sep=""));names(Qsp)[1] <- "SciName"
Qsp$Code <- ac(Qsp$Code)
Qs <- merge(x=Q,y=Qsp,by.x="Code", by.y="Code",all=T);
Qs$SciName <- ac(Qs$SciName)#spaces at the end!
Qs$SciName <- substr(Qs$SciName, start=1,stop=(nchar(Qs$SciName))-1)
rm(Q,Qsp)
##apply to GNS surveys
RAISE_Q<-T
}
if(CATCHABILITY_COR_MOD | SPECIES_IN_MOD_ONLY){
# add catchability by length group
if(survey == "CSFraOT4"){
#Q <- read.table("O:/C5716_FizzyFish/Working_Area/WP3 Food web indicators/lenmodels/CSeaModSpecies.csv",header=T,sep=',',as.is=T);         SPECIES_SUBSET <- Q[,1]
Q <- read.table("//lowfilecds/CDP/C5716_FizzyFish/Working_Area/WP3 Food web indicators/lenmodels/CSea RATIO SURVEY_MODEL.csv",header=T,sep=',',as.is=T)
SPECIES_SUBSET <- names(Q[1,-c(1,2)])
SPECIES_SUBSET <-sub("[.]", " ", SPECIES_SUBSET) #remove the R created .
Q[1,-c(1,2)] <- SPECIES_SUBSET
}
if(survey == "GNSIntOT1"){
Q <- read.table("//lowfilecds/CDP/C5716_FizzyFish/Working_Area/WP3 Food web indicators/lenmodels/NSea RATIO SURVEY_MODEL.csv",header=T,sep=',',as.is=T)
SPECIES_SUBSET <- names(Q[1,-c(1,2)])
SPECIES_SUBSET <-sub("[.]", " ", SPECIES_SUBSET) #remove the R created .
Q[1,-c(1,2)] <- SPECIES_SUBSET
}
##apply to GNS surveys
#RAISE_Q<-F
}
debugSource('Y:/MA016FI_Cefmat/Working_Area/D1/LFI/Scripts_and_required_files/Lynam_INDfn_Dec2016 - OSPARrectmod.R', echo=TRUE)
#  Before using, please install used packages
# with option of bootstapping by haul and subdiv and trendline fitting
#
# Author: C Lynam, Cefas
# Contact: chris.lynam@cefas.co.uk
# Version: 2.3
# Date: 10 Feb 2017
# edits: now choose surveys to loop through upfront, set paths used throughout upfront, uses new dataproduct structure
# reads shapefiles for subdivisions and includes spatial area of strata in calcs
# if both SAMP_STRAT and BYSUBDIV are true now averages catch by SAMP_STRAT then multiples by AREA; then sums within SUBDIV and raises to whole SUBDIV AREA if not fully sampled, so combination of SUBDIV not subject to change in relative contribution of SUBDIV due to sampling
# link to loess ploting code for subdivs complete
# to do -
# link to shapefile survey maps colours by status
# alter bootstrap code so works with survey strata not just rectangles
#  Error in MINUS$centlon : $ operator is invalid for atomic vectors
#TODAYSDATE = ""
LFIthresholds <- data.frame(BBICnSpaOT4=25,WASpaOT3=40,BBICsSpaOT4=45,BBICPorOT4=40,CSBBFraOT4=35,CSEngBT3=35,CSIreOT4=30,CSNIrOT1=45,CSNIrOT4=40,CSScoOT1=35,CSScoOT4=40,GNSEngBT3=50,GNSFraOT4=50,GNSGerBT3=30,GNSIntOT1=50,GNSIntOT3=50,GNSNetBT3=30,WAScoOT3=50,CSFraOT4=40)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Automatically (or manually, if desired...) set working directory
#PACKAGEDIRECTORY = "Y:/MA016FI_Cefmat/Working_Area/D4/TyL/" # If manually changing directory here, then comment out the second reference to PACKAGEDIRECTORY
library(rstudioapi)
this_script_dir = rstudioapi::getActiveDocumentContext()$path # DO NOT COPY AND PASTE THIS LINE INTO THE CONSOLE!! THIS LINE ONLY WORKS WHEN EXECUTED FROM THE SCRIPT
this_script_dir2 = strsplit(this_script_dir,  "Scripts_and_required_files"); this_script_dir2 = this_script_dir2[[1]]
PACKAGEDIRECTORY = this_script_dir2[1]
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#location of the data and subscripts
MAINDIR<- paste(PACKAGEDIRECTORY,"Scripts_and_required_files/Data_Product_V3/", sep = "")
#location of the subscripts
SUBSCRIPTS_TRAITS<- paste(PACKAGEDIRECTORY,"Scripts_and_required_files/", sep = "")
#location of the shapefiles and where is the 'attributes' folder
SHAPEPATH<- paste(PACKAGEDIRECTORY,"Scripts_and_required_files/Strata/", sep = "")
#where save output?
OUTPATHstem<- paste(PACKAGEDIRECTORY,"Outputs/", sep = "")
## choices for analyses upfront
setwd(MAINDIR)
SURVEYS<-list.files("Sampling_Info\\")
SURVEYS<-strsplit(SURVEYS,split="_")
SURVEY<-NULL
for(i in 1:length(SURVEYS)) SURVEY[i] <- SURVEYS[[i]][2]
SURVEY<-SURVEY[SURVEY!="AllSurveys" & !is.na(SURVEY)]; rm(SURVEYS)
SURVEY[length(SURVEY)+1]<-"CSFraOT4"
#SURVEY<- c("GNSEngBT3", "GNSFraOT4",  "GNSGerBT3",   "GNSIntOT1",   "GNSIntOT3",  "GNSNetBT3")
EHDS_PP<-F;
#SURVEY<- c("GNSIntOT1")
#SURVEY<- c("GNSIntOT3","GNSGerBT3","GNSIntOT1","GNSNetBT3")
#SURVEY<-SURVEY[!SURVEY%in%c("GNSIntOT3","GNSGerBT3","GNSIntOT1","GNSNetBT3")]
#full list
# "BBICnSpaOT4" "BBICPorOT4"  "BBICsSpaOT1" "BBICsSpaOT4" "CSBBFraOT4"  "CSEngBT3"    "CSIreOT4"    "CSNIrOT1"    "CSNIrOT4"    "CSScoOT1"
# "CSScoOT4"    "GNSEngBT3"   "GNSFraOT4"   "GNSGerBT3"   "GNSIntOT1"   "GNSIntOT3"   "GNSNetBT3"   "WAScoOT3"    "WASpaOT3"    "CSFraOT4"
#do you want to write outputs along the way and save workspace
WRITE <- T #save csvs as we go?
WRITE_LDs <- T #write Length distributions by species/year/subdiv?
BOOTSTRAP <- F # invoke code? if F next 3 lines redundant
NBOOT<-200
WRITE_BOOT <- F # every bootstrap dataset and indicator output
SAVE <- T # save workspace (after bootstrap)
#which indicators?
TyL_GeoM <- F # OSPAR FW3
MaxL <- F # OSPAR FC3
MEANTLs <- F #similar to OSPAR FW4 # not will not be calc'd for WAsurveys as no data file for TL
MeanL <- F #not OSPAR but simple
LFI <- T # similar to OSPAR FC2
OVERWITE_SUBDIV<-T ##not run##01Feb2017# if true ignore subdivisions [as done for LFI] and use sampstrat as subdivisions instead
# catchability for general species groups
SPECIES_IN_MOD_ONLY <-F
CATCHABILITY_COR_WALKER<-F
CATCHABILITY_COR_MOD<-F
SPECIES_IN_MOD_ONLY<-F
survey <-SURVEY
RAISE_Q<-F #can override below if Either CATCHABILITY_COR_ TRUE
#change lfi thr to 50
##NOTE additional choices below for plotting
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#useful packages
#install.packages("spatstat")
#install.packages("rgeos")
library(Hmisc)# for errbars
library(mgcv) # to investigate indicator trends with gam
library(maps) # for eyeball of data
library(lattice)
require(rgdal) # to read shapefiles for subdivisions
#to add shapefile info to data in Lynam_OSPARsubdiv_rectmod.r
library(sp)
library(spatstat)
library(rgeos)
library(maptools)
library(stringr)
#increase memory to max
memory.limit(size =4095)
memory.limit(size = NA)
#some shorthand
an <- as.numeric
af <- as.factor
ac <- as.character
h <- head
u <- unique
count<- function(DATA){length(unique(DATA))}
neg<-function(x) -x
#where are the subscripts and traits?
setwd(SUBSCRIPTS_TRAITS)
#additional functions
source("required.funcs.r")              # using tapply.ID
source("Lynam_INDfn_Dec2016 - OSPARrectmod.r") # Nov2016 update to output total of meanCPUE by strata and total survey area
if(BOOTSTRAP) source("Lynam_IND_BOOTfn_July_2016 - OSPAR.r")  # bootstrap the hauls by STSQ and subdiv
source("Lynam_INDPLOTFN.r")             # plot options
#subscripts for indicators
if(LFI) source("Lynam_INDfn_Dec2016_LFI_rectmod_May2018.R")   # Large Fish Indicator # Nov2016 no longer fall over if no fish above LFI_THRESHOLD
if(TyL_GeoM) source("Lynam_INDfn_Dec2016_TyL_GeoM.r")#Geometric mean length (Typical Length cm)
if(MeanL) source("Lynam_INDfn_Dec2016_MeanL.r") # Mean Length cm
if(MaxL) source("Lynam_INDfn_Dec2016_MaxL.r")  # MaxL
if(MEANTLs) source("Lynam_INDfn_Dec2016_MeanTL.r")# TL output by rectangle and year
# info on trophic level, demersal/pelagic,  maxLength, etc
#trait_file <- paste("fishspecieslifehistorytraits_v3.csv",sep='')
# should have some similar file in final dataproduct!
# dataset with traits by species for indicator script
#trait <- read.csv(trait_file)
#trait$SpeciesSciName <- paste(trait$Genus,trait$Species,sep='')
#max length observed in ospar dataproduct by species
#Hyperoplus immaculatus 'Greater sand-eel' were missing -> recorded in GNS IBTS Q1 but without length  treat as Ammodytidae 'sandeel'
MAXL_file <- paste("traits_by_species_Dec2016.csv",sep='')
trait_MAXL <- read.csv(MAXL_file)
#trophic level info
#cnrs mtl fw4
TLceltic <- read.csv("TL_complete14102016-1.csv")
names(TLceltic)[1] <- "SpeciesSciName"
TLceltic <- TLceltic[,c("SpeciesSciName","TL")]
# west of scotland
TLwest <- NULL
# north sea
TLnorth <- read.csv("refspp_LWmerged_edit06Nov2015.csv")
names(TLnorth)[2] <- "SpeciesSciName"
ECOPATH_TL <- F; if(ECOPATH_TL)  TLnorth$TL <- TLnorth$TL_Ecopath #for comparison with ewe
TLnorth <- TLnorth[,c("SpeciesSciName","TL")]
# catchability for general species groups
if(CATCHABILITY_COR_WALKER){
SciName2GroupEff <- read.csv("SciName2GroupEff.csv")
# add catchability by length group
Q <- read.csv(paste(PACKAGEDIRECTORY,"Scripts_and_required_files/Walker_GearEfficiency_ICESJMarSci17_Supp/EfficiencyTab.csv",sep=""))
Q$Code <- ac(Q$Code)
Qsp <- read.csv(paste(PACKAGEDIRECTORY,"Scripts_and_required_files/Walker_GearEfficiency_ICESJMarSci17_Supp//specieslist.csv",sep=""));names(Qsp)[1] <- "SciName"
Qsp$Code <- ac(Qsp$Code)
Qs <- merge(x=Q,y=Qsp,by.x="Code", by.y="Code",all=T);
Qs$SciName <- ac(Qs$SciName)#spaces at the end!
Qs$SciName <- substr(Qs$SciName, start=1,stop=(nchar(Qs$SciName))-1)
rm(Q,Qsp)
##apply to GNS surveys
RAISE_Q<-T
}
if(CATCHABILITY_COR_MOD | SPECIES_IN_MOD_ONLY){
# add catchability by length group
if(survey == "CSFraOT4"){
#Q <- read.table("O:/C5716_FizzyFish/Working_Area/WP3 Food web indicators/lenmodels/CSeaModSpecies.csv",header=T,sep=',',as.is=T);         SPECIES_SUBSET <- Q[,1]
Q <- read.table("//lowfilecds/CDP/C5716_FizzyFish/Working_Area/WP3 Food web indicators/lenmodels/CSea RATIO SURVEY_MODEL.csv",header=T,sep=',',as.is=T)
SPECIES_SUBSET <- names(Q[1,-c(1,2)])
SPECIES_SUBSET <-sub("[.]", " ", SPECIES_SUBSET) #remove the R created .
Q[1,-c(1,2)] <- SPECIES_SUBSET
}
if(survey == "GNSIntOT1"){
Q <- read.table("//lowfilecds/CDP/C5716_FizzyFish/Working_Area/WP3 Food web indicators/lenmodels/NSea RATIO SURVEY_MODEL.csv",header=T,sep=',',as.is=T)
SPECIES_SUBSET <- names(Q[1,-c(1,2)])
SPECIES_SUBSET <-sub("[.]", " ", SPECIES_SUBSET) #remove the R created .
Q[1,-c(1,2)] <- SPECIES_SUBSET
}
##apply to GNS surveys
#RAISE_Q<-F
}
0
source('Y:/MA016FI_Cefmat/Working_Area/D1/LFI/Scripts_and_required_files/Lynam_INDfn_Dec2016_LFI_rectmod_May2018.R', echo=TRUE)
debugSource('Y:/MA016FI_Cefmat/Working_Area/D1/LFI/Scripts_and_required_files/Lynam_INDfn_Dec2016 - OSPARrectmod.R', echo=TRUE)
debugSource('Y:/MA016FI_Cefmat/Working_Area/D1/LFI/Scripts_and_required_files/Lynam_INDfn_Dec2016 - OSPARrectmod.R', echo=TRUE)
debugSource('Y:/MA016FI_Cefmat/Working_Area/D1/LFI/Scripts_and_required_files/Lynam_INDfn_Dec2016 - OSPARrectmod.R', echo=TRUE)
source('Y:/MA016FI_Cefmat/Working_Area/D1/LFI/Scripts_and_required_files/Lynam_INDfn_Dec2016 - OSPARrectmod.R', echo=TRUE)
debugSource('Y:/MA016FI_Cefmat/Working_Area/D1/LFI/Scripts_and_required_files/Lynam_INDfn_Dec2016 - OSPARrectmod.R', echo=TRUE)
